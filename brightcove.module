<?php
/*
   http://docs.brightcove.com/en/media/
   http://support.brightcove.com/en/docs/category/players
   http://support.brightcove.com/en/docs/media-api-error-message-reference
   */

/**
  * @file
  * Brightcove module is an integration layer between any modules using
  * Brightcove API. It makes all necessary checks for the API and makes
  * settings available to the user.
  *
  * @author
  * Jakub Suchy <jakub@dynamiteheads.com>
  * 
  * Module development sponsored by Brightcove, Inc.
  */

// A name of Echove library folder, to be saved in sites/all/libraries.
define('ECHOVE_LIBRARY', 'echove');

/**
  * Settings needed:
  *  - API key
  *  - Allow public videos
  */

/**
 * Implementation of hook_menu().
 */
function brightcove_menu() {
  $items['admin/settings/brightcove'] = array(
    'title' => 'Brightcove settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('brightcove_admin_settings'),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer brightcove settings'),
    'file' => 'brightcove.admin.inc',
  );
  return $items;
}

/**
  * Implementation of hook_perm().
  */
function brightcove_perm() {
  return array('administer brightcove settings');
}

/**
  * Include all Echove SDK files.
  */
function _brightcove_initialize() {
  include_once libraries_get_path('echove') . '/echove.php';

  $read_token = variable_get('brightcove_read_api_key', '');
  $write_token = variable_get('brightcove_write_api_key', '');

  if (empty($read_token)) { 
    drupal_set_message(t('Cannot initialize Brightcove API. Contact site administrators.'));
    watchdog('brightcove', 'Brightcove Read API keys not found, cannot initialize Echove SDK.', array(), WATCHDOG_ERROR);
    return FALSE;
  }

  $bc = new Echove($read_token, $write_token);

  return $bc;
}


/**
  * Check a set of API keys to determine write access to Brightcove Studio.
  * Only customers with Professional and higher accounts have write access.
  *
  * @return
  *  TRUE for write access allowed.
  *  FALSE for write access forbidden.
  */
function brightcove_write_api_access() {
  if (variable_get('brightcove_write_api_key', '')) {
    return TRUE;
  } else {
    return FALSE;
  }
}

/**
  * Loads Brightcove video from BC Media API. Uses a 5 minutes cache to speed up lookups.
  *
  * @param $video_id
  * Brightcove Studio video ID.
  *
  * @return $video
  * Video object or FALSE if video not found.
  */
function brightcove_video_load($video_id) {
  $cache = cache_get('bc:video:' . $video_id, 'cache');
  if ($cache->data) {
    return $cache->data;
  } else {
    $bc = _brightcove_initialize();
    try {
      $video = $bc->find('find_video_by_id', $video_id);
    } catch (Exception $error) {
      watchdog('brightcove', 'Loading Brightcove video failed.', array(), WATCHDOG_ERROR);
      return FALSE;
    }
    cache_set('bc:video:' . $video_id, $video, 'cache', $_SERVER['REQUEST_TIME'] + 300);
  }
  return $video;
}
